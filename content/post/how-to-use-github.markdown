---

title: "Git がわからなくても Github を利用しよう"
date: 2013-02-06T13:36:00+09:00
comments: true
categories: ["github", "エッセイ"]
---

みなさん [Github](https://github.com/) を利用していますか？


「Git がわからないから…」と、そんな理由で使わないのはもったいないです。

Webや開発に携わる人間であれば、例えプログラムを書かなくても、Github へアクセスする機会は増えているのではないでしょうか。

Webの人であれば jQueryのプラグインを探したり、サンプルコードが Github においてあったりすると思います。


しかし、いきなり使いこなすのは難しいので、まずは以下のことをはじめてみることをおすすめします。

* アカウントを作る
* 知り合いや気になる人をフォローする
* 自分が利用しているリポジトリや気になるリポジトリにスターを付ける
* News Feed を読む
* **日本人がやってるネタリポジトリの Issues やPull Requestsに絡む**

Gitを利用しなければいけない機能はとりたててありません。<small>(Pull Requestには突っ込まないで)</small>

## アカウントを作る

まず、アカウントがないと何もできません。作りましょう。

[Githubのトップページ](https://github.com/)に "Sign up for free" というボタンから作成することができます。


## 知り合いや気になる人をフォローする

友達や気になる人をフォローしましょう。相手がフォロー返しをしてこなくても気にすることはないです。`News Feed を読む` ための布石にすぎません。

フォローすると News Feed にフォローした人の活動が表示されるようになります。これを見るのが目的なので、自分が興味のある活動をしている人がおすすめです。
あまり活動的な人をフォローするとフィードがどんどん流れてしまうので、初心者にはおすすめできません。

フォローする相手がいない場合は、あまり活発でない リポジトリをウォッチするという手もあります。

フォローするには `https//github.com/ユーザ名` にアクセスして、画面右上のほうに Followというボタンがあるのでそれをクリックします。

<img src="/images/follow.png" alt="フォローする"/>

例えば、私をフォローしたい場合は、[http://github.com/eiel](http://github.com/eiel) にアクセスします。

## 自分が利用しているリポジトリや気になるリポジトリにスターを付ける

スターというのは、`お気に入り`、`ブックマーク`、`いいね!`のような機能です。ソーシャルブックマークの効果を感じていれば、説明は不要だと思います。

スターをつけると、自分の活動に `このリポジトリにスターをつけました` と流れるので、あなたをフォローしている人が目にすることになります。
そうすると、そのリポジトリを見にいく人が増えますので、そのリポジトリがより活発になる可能性が高くなります。

**応援したい!!** と思えば、すかさず押してしまっても良いでしょう。

## News Feed を読む

ここが本記事の主旨です。

**News Feed を読みましょう。**

News Feed はログインした状態で、[Githubのトップ](https://github.com/)にアクセスすると閲覧できます。

友人もフォローしたし、スターをつけることを学びました。
友人がスターを付けたことがわかるはずです。
そのときはどんなリポジトリなのか見にいきましょう。
トレンドや面白いものが見つかるかもしれません。


News Feed は RSSリーダでも読むことができます。

画面右上にリンクがありますので、簡単にできると思います。URLにアクセストークンを含むので、**Web上の RSSリーダで閲覧する場合は自己責任でお願いします。**
自分の活動が流れるわけではないのであまり気にすることでもないかもしれません。


## **日本人がやってるネタリポジトリの Issue やPull Request に絡む**

上記の機能以外で挑戦してみて欲しいのは `Issue` や `Pull Request` という機能です。
Github の中で特に魅力的な機能です。


Isuueはバグを報告するところです。質問するためにも利用されていますし、TODOリストにも使います。


Pull Request は**「ここを修正したのだけど、取り込んでくれませんか？」**と伝えるところです。
Issueに上がってるものを修正したり、追加機能を思いついたときに利用します。


これらの機能を試すには、いきなり英語の開発プロジェクトに行くにはハードルが高いです。挑戦してみたいなら遊びでやってるようなものが絡みやすいです

私が関わるものであれば

* [Hiroshimarb-gem](https://github.com/hiroshimarb/hiroshimarb-gem)
* [全国の勉強会を整理しよう](https://github.com/eiel/StudySessions)

などがあります。

## まとめとか

News Feed を見ているだけでも、いろんなことに挑戦したくなったり、もっと便利に使いたくなるようになります。
Git 自体の勉強はその時にはじめていけばよいと思います。

Git のコマンドラインインターフェイスもどんどん丁寧になっており、<small>英語さえ読めば</small>怖いこともありません。
GUIツールもどんどん便利になっていますが、痒いところに届きにくいですので、余裕がある方はコマンドラインからの利用から入門をおすすめします。


Githubは開発者のSNSともいえる場所です。一歩進んだ開発者をめざすには必見のサイトではないでしょうか。

## 関連

* [Github Pages について整理しておきます](http://blog.eiel.info/blog/2013/02/17/github-pages/)
* [Github の楽しみ方 ](/blog/2013/02/06/how-to-use-github/)
* [GitHub からの通知が迷惑メールになった - 見ないリポジトリは unwatch しよう](/blog/2013/11/21/github-notifications-is-not-spam/)
